/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./public/src/scss/main.scss":
/*!***********************************!*\
  !*** ./public/src/scss/main.scss ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ "./public/src/ts/helpers.ts":
/*!**********************************!*\
  !*** ./public/src/ts/helpers.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.randInt = exports.generatePlayerName = void 0;
var descriptiveList = [
    "Green",
    "Blue",
    "Red",
    "Yellow",
    "Brown",
    "Strong",
    "Miserable",
    "Aloof",
    "Pleasant",
    "Invisible",
    "Smelly",
    "Weird",
    "Pungent",
    "Final",
    "Horrid",
    "Nasty",
    "Euphoric",
    "Trippy",
    "Dazed",
    "Dreamy",
    "Drowsy",
    "Foolish",
    "Crippled",
    "Screaming",
    "Poggers",
    "Flaccid",
    "Rotten",
    "Moist",
    "Simple",
    "Tasty",
    "Venti",
    "Grande",
    "Short",
    "Long",
    "Tall",
    "Seedy",
    "Toothy",
    "Robotic",
    "Feisty",
    "Dirty",
    "Soaked",
    "Squishy",
    "Distant",
    "Noobish",
    "Pwned",
    "Lanky",
    "Peppered",
    "Sad",
    "Moldy",
    "Spicy",
    "Bloody",
    "Cute",
    "Daring",
    "Creepy",
    "Curious",
    "Lazy",
    "Tyrant",
    "Anxious",
    "Adorable",
    "Grabby",
    "Handsy",
    "Panicking",
    "Combative",
    "Annoying",
    "Cryptic",
    "Wheezy",
    "Shady",
    "Thinking",
    "Insane",
    "Loose",
    "Limp",
    "Scary",
    "Furious",
    "Ecstatic",
    "Shady",
    "Derpy",
    "Burnt",
    "Tarnished",
    "Messy",
    "Birthday",
    "Alpha",
    "Beta",
    "Soggy",
    "Siamese",
    "Surprised",
    "Bad",
    "Lusty",
    "Wild",
    "Wet",
    "Crusty",
    "Twitchy",
    "Throbby",
    "Extreme",
    "Crazy",
    "Crazed",
];
var thingList = [
    "Dragon",
    "Poop",
    "Snow",
    "Vampire",
    "Hobo",
    "Jerky",
    "Moose",
    "Banana",
    "Coffee",
    "Monster",
    "Pile",
    "Zombie",
    "Mutant",
    "Boomer",
    "Jello",
    "Milk",
    "Boss",
    "Minion",
    "Pervert",
    "Kebab",
    "Frog",
    "Noob",
    "Nub",
    "Life",
    "Dream",
    "Snek",
    "Lizard",
    "Beetle",
    "Cat",
    "Wheezer",
    "Geezer",
    "Creeper",
    "Beast",
    "Peasant",
    "Thief",
    "Tech",
    "Orange",
    "Bread",
    "Wife",
    "Cuckold",
    "Actor",
    "Artist",
    "Doctor",
    "Monkey",
    "Ghost",
    "Camera",
    "Cookie",
    "Dealer",
    "Chef",
    "Knight",
    "Joker",
    "Blob",
    "Member",
    "Bird",
    "Crumpet",
    "Bagel",
    "Toast",
    "Goose",
    "Potato",
    "Dwarve",
    "Elf",
    "Loner",
    "Wolf",
    "Nerd",
    "Shadow",
    "Grandpa",
    "Grandma",
    "Uncle",
    "Aunty",
    "Mother",
    "Father",
    "Sister",
    "Brother",
    "Crab",
    "Rogue",
    "Goblin",
    "Wizard",
    "Warlock",
    "Gorgon",
    "Ranger",
    "Monk",
    "Brawler",
    "Zerker",
];
var numList = [
    42,
    69,
    420,
    666,
    777,
    911,
    616,
    1066,
    1337,
    1420,
    1696,
    1942,
    1969,
    1984,
    2000,
    2012,
    2042,
    2069,
    2420,
    3042,
    3069,
    3420,
    4042,
    4069,
    4420,
    5000,
    5042,
    5069,
    5420,
    6969,
    7777,
    9001,
];
var generatePlayerName = function () {
    var desc = descriptiveList[(0, exports.randInt)(0, descriptiveList.length)];
    var thing = thingList[(0, exports.randInt)(0, thingList.length)];
    var num = numList[(0, exports.randInt)(0, numList.length)];
    return "" + desc + thing + num;
};
exports.generatePlayerName = generatePlayerName;
var randInt = function (min, max) {
    min = Math.ceil(min);
    max = Math.floor(max);
    return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive
};
exports.randInt = randInt;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVscGVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90cy9oZWxwZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLElBQU0sZUFBZSxHQUFHO0lBQ3BCLE9BQU87SUFDUCxNQUFNO0lBQ04sS0FBSztJQUNMLFFBQVE7SUFDUixPQUFPO0lBQ1AsUUFBUTtJQUNSLFdBQVc7SUFDWCxPQUFPO0lBQ1AsVUFBVTtJQUNWLFdBQVc7SUFDWCxRQUFRO0lBQ1IsT0FBTztJQUNQLFNBQVM7SUFDVCxPQUFPO0lBQ1AsUUFBUTtJQUNSLE9BQU87SUFDUCxVQUFVO0lBQ1YsUUFBUTtJQUNSLE9BQU87SUFDUCxRQUFRO0lBQ1IsUUFBUTtJQUNSLFNBQVM7SUFDVCxVQUFVO0lBQ1YsV0FBVztJQUNYLFNBQVM7SUFDVCxTQUFTO0lBQ1QsUUFBUTtJQUNSLE9BQU87SUFDUCxRQUFRO0lBQ1IsT0FBTztJQUNQLE9BQU87SUFDUCxRQUFRO0lBQ1IsT0FBTztJQUNQLE1BQU07SUFDTixNQUFNO0lBQ04sT0FBTztJQUNQLFFBQVE7SUFDUixTQUFTO0lBQ1QsUUFBUTtJQUNSLE9BQU87SUFDUCxRQUFRO0lBQ1IsU0FBUztJQUNULFNBQVM7SUFDVCxTQUFTO0lBQ1QsT0FBTztJQUNQLE9BQU87SUFDUCxVQUFVO0lBQ1YsS0FBSztJQUNMLE9BQU87SUFDUCxPQUFPO0lBQ1AsUUFBUTtJQUNSLE1BQU07SUFDTixRQUFRO0lBQ1IsUUFBUTtJQUNSLFNBQVM7SUFDVCxNQUFNO0lBQ04sUUFBUTtJQUNSLFNBQVM7SUFDVCxVQUFVO0lBQ1YsUUFBUTtJQUNSLFFBQVE7SUFDUixXQUFXO0lBQ1gsV0FBVztJQUNYLFVBQVU7SUFDVixTQUFTO0lBQ1QsUUFBUTtJQUNSLE9BQU87SUFDUCxVQUFVO0lBQ1YsUUFBUTtJQUNSLE9BQU87SUFDUCxNQUFNO0lBQ04sT0FBTztJQUNQLFNBQVM7SUFDVCxVQUFVO0lBQ1YsT0FBTztJQUNQLE9BQU87SUFDUCxP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RUFBRSxHQUFVO0lBQzFDLEdBQUcsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3JCLEdBQUcsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3RCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyx1REFBdUQ7QUFDakgsQ0FBQyxDQUFBO0FBSlksUUFBQSxPQUFPLFdBSW5CIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZGVzY3JpcHRpdmVMaXN0ID0gW1xyXG4gICAgXCJHcmVlblwiLFxyXG4gICAgXCJCbHVlXCIsXHJcbiAgICBcIlJlZFwiLFxyXG4gICAgXCJZZWxsb3dcIixcclxuICAgIFwiQnJvd25cIixcclxuICAgIFwiU3Ryb25nXCIsXHJcbiAgICBcIk1pc2VyYWJsZVwiLFxyXG4gICAgXCJBbG9vZlwiLFxyXG4gICAgXCJQbGVhc2FudFwiLFxyXG4gICAgXCJJbnZpc2libGVcIixcclxuICAgIFwiU21lbGx5XCIsXHJcbiAgICBcIldlaXJkXCIsXHJcbiAgICBcIlB1bmdlbnRcIixcclxuICAgIFwiRmluYWxcIixcclxuICAgIFwiSG9ycmlkXCIsXHJcbiAgICBcIk5hc3R5XCIsXHJcbiAgICBcIkV1cGhvcmljXCIsXHJcbiAgICBcIlRyaXBweVwiLFxyXG4gICAgXCJEYXplZFwiLFxyXG4gICAgXCJEcmVhbXlcIixcclxuICAgIFwiRHJvd3N5XCIsXHJcbiAgICBcIkZvb2xpc2hcIixcclxuICAgIFwiQ3JpcHBsZWRcIixcclxuICAgIFwiU2NyZWFtaW5nXCIsXHJcbiAgICBcIlBvZ2dlcnNcIixcclxuICAgIFwiRmxhY2NpZFwiLFxyXG4gICAgXCJSb3R0ZW5cIixcclxuICAgIFwiTW9pc3RcIixcclxuICAgIFwiU2ltcGxlXCIsXHJcbiAgICBcIlRhc3R5XCIsXHJcbiAgICBcIlZlbnRpXCIsXHJcbiAgICBcIkdyYW5kZVwiLFxyXG4gICAgXCJTaG9ydFwiLFxyXG4gICAgXCJMb25nXCIsXHJcbiAgICBcIlRhbGxcIixcclxuICAgIFwiU2VlZHlcIixcclxuICAgIFwiVG9vdGh5XCIsXHJcbiAgICBcIlJvYm90aWNcIixcclxuICAgIFwiRmVpc3R5XCIsXHJcbiAgICBcIkRpcnR5XCIsXHJcbiAgICBcIlNvYWtlZFwiLFxyXG4gICAgXCJTcXVpc2h5XCIsXHJcbiAgICBcIkRpc3RhbnRcIixcclxuICAgIFwiTm9vYmlzaFwiLFxyXG4gICAgXCJQd25lZFwiLFxyXG4gICAgXCJMYW5reVwiLFxyXG4gICAgXCJQZXBwZXJlZFwiLFxyXG4gICAgXCJTYWRcIixcclxuICAgIFwiTW9sZHlcIixcclxuICAgIFwiU3BpY3lcIixcclxuICAgIFwiQmxvb2R5XCIsXHJcbiAgICBcIkN1dGVcIixcclxuICAgIFwiRGFyaW5nXCIsXHJcbiAgICBcIkNyZWVweVwiLFxyXG4gICAgXCJDdXJpb3VzXCIsXHJcbiAgICBcIkxhenlcIixcclxuICAgIFwiVHlyYW50XCIsXHJcbiAgICBcIkFueGlvdXNcIixcclxuICAgIFwiQWRvcmFibGVcIixcclxuICAgIFwiR3JhYmJ5XCIsXHJcbiAgICBcIkhhbmRzeVwiLFxyXG4gICAgXCJQYW5pY2tpbmdcIixcclxuICAgIFwiQ29tYmF0aXZlXCIsXHJcbiAgICBcIkFubm95aW5nXCIsXHJcbiAgICBcIkNyeXB0aWNcIixcclxuICAgIFwiV2hlZXp5XCIsXHJcbiAgICBcIlNoYWR5XCIsXHJcbiAgICBcIlRoaW5raW5nXCIsXHJcbiAgICBcIkluc2FuZVwiLFxyXG4gICAgXCJMb29zZVwiLFxyXG4gICAgXCJMaW1wXCIsXHJcbiAgICBcIlNjYXJ5XCIsXHJcbiAgICBcIkZ1cmlvdXNcIixcclxuICAgIFwiRWNzdGF0aWNcIixcclxuICAgIFwiU2hhZHlcIixcclxuICAgIFwiRGVycHlcIixcclxuICAgIFwiQnVybnRcIixcclxuICAgIFwiVGFybmlzaGVkXCIsXHJcbiAgICBcIk1lc3N5XCIsXHJcbiAgICBcIkJpcnRoZGF5XCIsXHJcbiAgICBcIkFscGhhXCIsXHJcbiAgICBcIkJldGFcIixcclxuICAgIFwiU29nZ3lcIixcclxuICAgIFwiU2lhbWVzZVwiLFxyXG4gICAgXCJTdXJwcmlzZWRcIixcclxuICAgIFwiQmFkXCIsXHJcbiAgICBcIkx1c3R5XCIsXHJcbiAgICBcIldpbGRcIixcclxuICAgIFwiV2V0XCIsXHJcbiAgICBcIkNydXN0eVwiLFxyXG4gICAgXCJUd2l0Y2h5XCIsXHJcbiAgICBcIlRocm9iYnlcIixcclxuICAgIFwiRXh0cmVtZVwiLFxyXG4gICAgXCJDcmF6eVwiLFxyXG4gICAgXCJDcmF6ZWRcIixcclxuXTtcclxuY29uc3QgdGhpbmdMaXN0ID0gW1xyXG4gICAgXCJEcmFnb25cIixcclxuICAgIFwiUG9vcFwiLFxyXG4gICAgXCJTbm93XCIsXHJcbiAgICBcIlZhbXBpcmVcIixcclxuICAgIFwiSG9ib1wiLFxyXG4gICAgXCJKZXJreVwiLFxyXG4gICAgXCJNb29zZVwiLFxyXG4gICAgXCJCYW5hbmFcIixcclxuICAgIFwiQ29mZmVlXCIsXHJcbiAgICBcIk1vbnN0ZXJcIixcclxuICAgIFwiUGlsZVwiLFxyXG4gICAgXCJab21iaWVcIixcclxuICAgIFwiTXV0YW50XCIsXHJcbiAgICBcIkJvb21lclwiLFxyXG4gICAgXCJKZWxsb1wiLFxyXG4gICAgXCJNaWxrXCIsXHJcbiAgICBcIkJvc3NcIixcclxuICAgIFwiTWluaW9uXCIsXHJcbiAgICBcIlBlcnZlcnRcIixcclxuICAgIFwiS2ViYWJcIixcclxuICAgIFwiRnJvZ1wiLFxyXG4gICAgXCJOb29iXCIsXHJcbiAgICBcIk51YlwiLFxyXG4gICAgXCJMaWZlXCIsXHJcbiAgICBcIkRyZWFtXCIsXHJcbiAgICBcIlNuZWtcIixcclxuICAgIFwiTGl6YXJkXCIsXHJcbiAgICBcIkJlZXRsZVwiLFxyXG4gICAgXCJDYXRcIixcclxuICAgIFwiV2hlZXplclwiLFxyXG4gICAgXCJHZWV6ZXJcIixcclxuICAgIFwiQ3JlZXBlclwiLFxyXG4gICAgXCJCZWFzdFwiLFxyXG4gICAgXCJQZWFzYW50XCIsXHJcbiAgICBcIlRoaWVmXCIsXHJcbiAgICBcIlRlY2hcIixcclxuICAgIFwiT3JhbmdlXCIsXHJcbiAgICBcIkJyZWFkXCIsXHJcbiAgICBcIldpZmVcIixcclxuICAgIFwiQ3Vja29sZFwiLFxyXG4gICAgXCJBY3RvclwiLFxyXG4gICAgXCJBcnRpc3RcIixcclxuICAgIFwiRG9jdG9yXCIsXHJcbiAgICBcIk1vbmtleVwiLFxyXG4gICAgXCJHaG9zdFwiLFxyXG4gICAgXCJDYW1lcmFcIixcclxuICAgIFwiQ29va2llXCIsXHJcbiAgICBcIkRlYWxlclwiLFxyXG4gICAgXCJDaGVmXCIsXHJcbiAgICBcIktuaWdodFwiLFxyXG4gICAgXCJKb2tlclwiLFxyXG4gICAgXCJCbG9iXCIsXHJcbiAgICBcIk1lbWJlclwiLFxyXG4gICAgXCJCaXJkXCIsXHJcbiAgICBcIkNydW1wZXRcIixcclxuICAgIFwiQmFnZWxcIixcclxuICAgIFwiVG9hc3RcIixcclxuICAgIFwiR29vc2VcIixcclxuICAgIFwiUG90YXRvXCIsXHJcbiAgICBcIkR3YXJ2ZVwiLFxyXG4gICAgXCJFbGZcIixcclxuICAgIFwiTG9uZXJcIixcclxuICAgIFwiV29sZlwiLFxyXG4gICAgXCJOZXJkXCIsXHJcbiAgICBcIlNoYWRvd1wiLFxyXG4gICAgXCJHcmFuZHBhXCIsXHJcbiAgICBcIkdyYW5kbWFcIixcclxuICAgIFwiVW5jbGVcIixcclxuICAgIFwiQXVudHlcIixcclxuICAgIFwiTW90aGVyXCIsXHJcbiAgICBcIkZhdGhlclwiLFxyXG4gICAgXCJTaXN0ZXJcIixcclxuICAgIFwiQnJvdGhlclwiLFxyXG4gICAgXCJDcmFiXCIsXHJcbiAgICBcIlJvZ3VlXCIsXHJcbiAgICBcIkdvYmxpblwiLFxyXG4gICAgXCJXaXphcmRcIixcclxuICAgIFwiV2FybG9ja1wiLFxyXG4gICAgXCJHb3Jnb25cIixcclxuICAgIFwiUmFuZ2VyXCIsXHJcbiAgICBcIk1vbmtcIixcclxuICAgIFwiQnJhd2xlclwiLFxyXG4gICAgXCJaZXJrZXJcIixcclxuXTtcclxuY29uc3QgbnVtTGlzdCA9IFtcclxuICAgIDQyLFxyXG4gICAgNjksXHJcbiAgICA0MjAsXHJcbiAgICA2NjYsXHJcbiAgICA3NzcsXHJcbiAgICA5MTEsXHJcbiAgICA2MTYsXHJcbiAgICAxMDY2LFxyXG4gICAgMTMzNyxcclxuICAgIDE0MjAsXHJcbiAgICAxNjk2LFxyXG4gICAgMTk0MixcclxuICAgIDE5NjksXHJcbiAgICAxOTg0LFxyXG4gICAgMjAwMCxcclxuICAgIDIwMTIsXHJcbiAgICAyMDQyLFxyXG4gICAgMjA2OSxcclxuICAgIDI0MjAsXHJcbiAgICAzMDQyLFxyXG4gICAgMzA2OSxcclxuICAgIDM0MjAsXHJcbiAgICA0MDQyLFxyXG4gICAgNDA2OSxcclxuICAgIDQ0MjAsXHJcbiAgICA1MDAwLFxyXG4gICAgNTA0MixcclxuICAgIDUwNjksXHJcbiAgICA1NDIwLFxyXG4gICAgNjk2OSxcclxuICAgIDc3NzcsXHJcbiAgICA5MDAxLFxyXG5dO1xyXG5cclxuZXhwb3J0IGNvbnN0IGdlbmVyYXRlUGxheWVyTmFtZSA9ICgpOiBzdHJpbmcgPT4ge1xyXG4gICAgbGV0IGRlc2MgPSBkZXNjcmlwdGl2ZUxpc3RbcmFuZEludCgwLCBkZXNjcmlwdGl2ZUxpc3QubGVuZ3RoKV07XHJcbiAgICBsZXQgdGhpbmcgPSB0aGluZ0xpc3RbcmFuZEludCgwLCB0aGluZ0xpc3QubGVuZ3RoKV07XHJcbiAgICBsZXQgbnVtID0gbnVtTGlzdFtyYW5kSW50KDAsIG51bUxpc3QubGVuZ3RoKV07XHJcbiAgICByZXR1cm4gYCR7ZGVzY30ke3RoaW5nfSR7bnVtfWA7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCByYW5kSW50ID0gKG1pbjpudW1iZXIsIG1heDpudW1iZXIpOiBudW1iZXIgPT4ge1xyXG4gICAgbWluID0gTWF0aC5jZWlsKG1pbik7XHJcbiAgICBtYXggPSBNYXRoLmZsb29yKG1heCk7XHJcbiAgICByZXR1cm4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKG1heCAtIG1pbikgKyBtaW4pOyAvL1RoZSBtYXhpbXVtIGlzIGV4Y2x1c2l2ZSBhbmQgdGhlIG1pbmltdW0gaXMgaW5jbHVzaXZlXHJcbn0iXX0=

/***/ }),

/***/ "./public/src/ts/index.ts":
/*!********************************!*\
  !*** ./public/src/ts/index.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sendChat = exports.startGame = void 0;
var startup_1 = __webpack_require__(/*! ./startup */ "./public/src/ts/startup.ts");
var helpers_1 = __webpack_require__(/*! ./helpers */ "./public/src/ts/helpers.ts");
var websocket_1 = __webpack_require__(/*! ./modules/websocket */ "./public/src/ts/modules/websocket.ts");
var siteLoader = document.getElementById('loader');
var camera = document.querySelector('canvas');
var map_canvas = document.createElement('canvas');
var camera_ctx = camera.getContext('2d');
var map_ctx = camera.getContext('2d');
var mouse = {
    x: 0,
    y: 0,
    d: 0,
    dC: false
};
var renderBubbles = true;
var ws = new WebSocket("ws://" + window.location.host);
ws.addEventListener('message', function (e) {
    e.data.arrayBuffer().then(function (arrayBuffer) {
        (0, websocket_1.decode)(arrayBuffer);
    });
});
setInterval(function () {
    if (mouse.dC) {
        mouse.dC = false;
        (0, websocket_1.sendRotUpdate)(ws, mouse.d);
    }
}, 50);
camera.addEventListener('mousemove', function (e) {
    var rect = camera.getBoundingClientRect();
    mouse.dC = true;
    mouse.x = e.clientX - rect.left;
    mouse.y = e.clientY - rect.top;
    mouse.d = Math.atan2(mouse.y - camera.height / 2, mouse.x - camera.width / 2);
});
window.addEventListener('resize', function () {
    resize();
});
startup_1.loginOverlay.addEventListener('click', function (e) {
    addDot(e.clientX, e.clientY, 0, 0);
});
function resize() {
    camera.width = window.innerWidth;
    camera.height = window.innerHeight;
}
var dots = [];
function addDot(x, y, xV, yV) {
    if (x === void 0) { x = (0, helpers_1.randInt)(0, 1920); }
    if (y === void 0) { y = (0, helpers_1.randInt)(0, 1080); }
    if (xV === void 0) { xV = (0, helpers_1.randInt)(-2, 3); }
    if (yV === void 0) { yV = (0, helpers_1.randInt)(-2, 3); }
    dots.push([
        x,
        y,
        xV,
        yV,
        (0, helpers_1.randInt)(0, 360),
        1 //Current size
    ]);
}
setInterval(addDot, 100);
function render() {
    camera_ctx.fillStyle = "#444";
    camera_ctx.fillRect(0, 0, camera.width, camera.height);
    if (renderBubbles) {
        for (var i = 0; i < dots.length; i++) {
            var dot = dots[i];
            camera_ctx.fillStyle = "hsl(" + dot[4] + ", 100%, 50%, " + 0.013333 * (50 - dot[5]) + ")";
            camera_ctx.beginPath();
            camera_ctx.arc(dot[0], dot[1], dot[5], 0, Math.PI * 2);
            camera_ctx.closePath();
            camera_ctx.fill();
            dot[0] += dot[2];
            dot[1] += dot[3];
            dot[5] += 0.5;
            if (dot[5] > 50) {
                dots.splice(i, 1);
            }
        }
    }
    else {
        camera_ctx.fillStyle = "#37bd37";
        camera_ctx.beginPath();
        camera_ctx.arc(mouse.x, mouse.y, 5, 0, Math.PI * 2);
        camera_ctx.fill();
        camera_ctx.closePath();
        camera_ctx.save();
        camera_ctx.setTransform(1, 0, 0, 1, camera.width / 2, camera.height / 2);
        camera_ctx.rotate(Math.atan2(mouse.y - camera.height / 2, mouse.x - camera.width / 2));
        camera_ctx.fillRect(-35, -15, 70, 30);
        camera_ctx.restore();
    }
    requestAnimationFrame(render);
}
function initGameHandlers() {
    camera.addEventListener('click', function (e) {
        console.log('mouseClick', mouse);
    });
}
function startGame(username) {
    renderBubbles = false;
    (0, websocket_1.initPlayer)(ws, username);
    initGameHandlers();
}
exports.startGame = startGame;
function sendChat(msg) {
    (0, websocket_1.sendChatMessage)(ws, msg);
}
exports.sendChat = sendChat;
(0, startup_1.prepareStartForm)();
resize();
render();
setTimeout(function () {
    siteLoader.classList.add('hidden');
}, 500);
//# sourceMappingURL=data:application/json;base64,

/***/ }),

/***/ "./public/src/ts/modules/websocket.ts":
/*!********************************************!*\
  !*** ./public/src/ts/modules/websocket.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.sendMessage = exports.sendRotUpdate = exports.sendChatMessage = exports.initPlayer = exports.decode = void 0;
var MESSAGE_TYPE;
(function (MESSAGE_TYPE) {
    MESSAGE_TYPE[MESSAGE_TYPE["NULL"] = 0] = "NULL";
    MESSAGE_TYPE[MESSAGE_TYPE["INIT"] = 1] = "INIT";
    MESSAGE_TYPE[MESSAGE_TYPE["ROTATE"] = 2] = "ROTATE";
    MESSAGE_TYPE[MESSAGE_TYPE["MOVE"] = 3] = "MOVE";
    MESSAGE_TYPE[MESSAGE_TYPE["CHAT"] = 4] = "CHAT";
})(MESSAGE_TYPE || (MESSAGE_TYPE = {}));
var decode = function (msg) {
    var dv = new DataView(msg);
    var type = dv.getUint8(0);
    switch (type) {
        case MESSAGE_TYPE.INIT:
            console.log("Got INIT from server! Map size: " + dv.getUint16(1));
            break;
        case MESSAGE_TYPE.CHAT:
            console.log("Got chat message from server!");
            break;
    }
};
exports.decode = decode;
var initPlayer = function (socket, name) {
    (0, exports.sendMessage)(socket, MESSAGE_TYPE.INIT, name);
};
exports.initPlayer = initPlayer;
var sendChatMessage = function (socket, msg) {
    (0, exports.sendMessage)(socket, MESSAGE_TYPE.CHAT, msg);
};
exports.sendChatMessage = sendChatMessage;
var sendRotUpdate = function (socket, rad) {
    var payload = new ArrayBuffer(5);
    var dv = new DataView(payload);
    dv.setUint8(0, MESSAGE_TYPE.ROTATE);
    dv.setFloat32(1, rad);
    socket.send(payload);
};
exports.sendRotUpdate = sendRotUpdate;
var sendMessage = function (socket, msgType, msg) {
    var payload = new ArrayBuffer(1 + msg.length);
    var dv = new DataView(payload);
    dv.setUint8(0, msgType);
    for (var i = 0; i < msg.length; i++) {
        dv.setUint8(i + 1, msg.charCodeAt(i));
    }
    socket.send(payload);
};
exports.sendMessage = sendMessage;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vic29ja2V0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3RzL21vZHVsZXMvd2Vic29ja2V0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUVBLElBQUssWUFNSjtBQU5ELFdBQUssWUFBWTtJQUNiLCtDQUFRLENBQUE7SUFDUiwrQ0FBSSxDQUFBO0lBQ0osbURBQU0sQ0FBQTtJQUNOLCtDQUFJLENBQUE7SUFDSiwrQ0FBSSxDQUFBO0FBQ1IsQ0FBQyxFQU5JLFlBQVksS0FBWixZQUFZLFFBTWhCO0FBRU0sSUFBTSxNQUFNLEdBQUcsVUFBQyxHQUFnQjtJQUNuQyxJQUFNLEVBQUUsR0FBRyxJQUFJLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUM3QixJQUFNLElBQUksR0FBRyxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBRTVCLFFBQU8sSUFBSSxFQUFFO1FBQ1QsS0FBSyxZQUFZLENBQUMsSUFBSTtZQUNsQixPQUFPLENBQUMsR0FBRyxDQUFDLHFDQUFtQyxFQUFFLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBRyxDQUFDLENBQUM7WUFDbEUsTUFBTTtRQUNWLEtBQUssWUFBWSxDQUFDLElBQUk7WUFDbEIsT0FBTyxDQUFDLEdBQUcsQ0FBQywrQkFBK0IsQ0FBQyxDQUFDO1lBQzdDLE1BQU07S0FDYjtBQUNMLENBQUMsQ0FBQTtBQVpZLFFBQUEsTUFBTSxVQVlsQjtBQUVNLElBQU0sVUFBVSxHQUFHLFVBQUMsTUFBaUIsRUFBRSxJQUFZO0lBQ3RELElBQUEsbUJBQVcsRUFBQyxNQUFNLEVBQUUsWUFBWSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNqRCxDQUFDLENBQUE7QUFGWSxRQUFBLFVBQVUsY0FFdEI7QUFFTSxJQUFNLGVBQWUsR0FBRyxVQUFDLE1BQWlCLEVBQUUsR0FBVztJQUMxRCxJQUFBLG1CQUFXLEVBQUMsTUFBTSxFQUFFLFlBQVksQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLENBQUM7QUFDaEQsQ0FBQyxDQUFBO0FBRlksUUFBQSxlQUFlLG1CQUUzQjtBQUVNLElBQU0sYUFBYSxHQUFHLFVBQUMsTUFBaUIsRUFBRSxHQUFXO0lBQ3hELElBQU0sT0FBTyxHQUFHLElBQUksV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ25DLElBQU0sRUFBRSxHQUFHLElBQUksUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBRWpDLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFLFlBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNwQyxFQUFFLENBQUMsVUFBVSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUV0QixNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQ3pCLENBQUMsQ0FBQTtBQVJZLFFBQUEsYUFBYSxpQkFRekI7QUFFTSxJQUFNLFdBQVcsR0FBRyxVQUFDLE1BQWlCLEVBQUUsT0FBZSxFQUFFLEdBQVc7SUFDdkUsSUFBTSxPQUFPLEdBQUcsSUFBSSxXQUFXLENBQUMsQ0FBQyxHQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUM5QyxJQUFNLEVBQUUsR0FBRyxJQUFJLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUVqQyxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUV4QixLQUFJLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsR0FBRyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUNoQyxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUMsR0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQ3ZDO0lBRUQsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUN6QixDQUFDLENBQUE7QUFYWSxRQUFBLFdBQVcsZUFXdkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1ZlYzJ9IGZyb20gJy4vbWF0aCdcclxuXHJcbmVudW0gTUVTU0FHRV9UWVBFIHtcclxuICAgIE5VTEwgPSAwLFxyXG4gICAgSU5JVCxcclxuICAgIFJPVEFURSxcclxuICAgIE1PVkUsXHJcbiAgICBDSEFUXHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBkZWNvZGUgPSAobXNnOiBBcnJheUJ1ZmZlcikgPT4ge1xyXG4gICAgY29uc3QgZHYgPSBuZXcgRGF0YVZpZXcobXNnKTtcclxuICAgIGNvbnN0IHR5cGUgPSBkdi5nZXRVaW50OCgwKTtcclxuXHJcbiAgICBzd2l0Y2godHlwZSkge1xyXG4gICAgICAgIGNhc2UgTUVTU0FHRV9UWVBFLklOSVQ6XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGBHb3QgSU5JVCBmcm9tIHNlcnZlciEgTWFwIHNpemU6ICR7ZHYuZ2V0VWludDE2KDEpfWApO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlIE1FU1NBR0VfVFlQRS5DSEFUOlxyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhgR290IGNoYXQgbWVzc2FnZSBmcm9tIHNlcnZlciFgKTtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBpbml0UGxheWVyID0gKHNvY2tldDogV2ViU29ja2V0LCBuYW1lOiBzdHJpbmcpID0+IHtcclxuICAgIHNlbmRNZXNzYWdlKHNvY2tldCwgTUVTU0FHRV9UWVBFLklOSVQsIG5hbWUpO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3Qgc2VuZENoYXRNZXNzYWdlID0gKHNvY2tldDogV2ViU29ja2V0LCBtc2c6IHN0cmluZykgPT4ge1xyXG4gICAgc2VuZE1lc3NhZ2Uoc29ja2V0LCBNRVNTQUdFX1RZUEUuQ0hBVCwgbXNnKTtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IHNlbmRSb3RVcGRhdGUgPSAoc29ja2V0OiBXZWJTb2NrZXQsIHJhZDogbnVtYmVyKSA9PiB7XHJcbiAgICBjb25zdCBwYXlsb2FkID0gbmV3IEFycmF5QnVmZmVyKDUpO1xyXG4gICAgY29uc3QgZHYgPSBuZXcgRGF0YVZpZXcocGF5bG9hZCk7XHJcblxyXG4gICAgZHYuc2V0VWludDgoMCwgTUVTU0FHRV9UWVBFLlJPVEFURSk7XHJcbiAgICBkdi5zZXRGbG9hdDMyKDEsIHJhZCk7XHJcblxyXG4gICAgc29ja2V0LnNlbmQocGF5bG9hZCk7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBzZW5kTWVzc2FnZSA9IChzb2NrZXQ6IFdlYlNvY2tldCwgbXNnVHlwZTogbnVtYmVyLCBtc2c6IHN0cmluZykgPT4ge1xyXG4gICAgY29uc3QgcGF5bG9hZCA9IG5ldyBBcnJheUJ1ZmZlcigxK21zZy5sZW5ndGgpO1xyXG4gICAgY29uc3QgZHYgPSBuZXcgRGF0YVZpZXcocGF5bG9hZCk7XHJcblxyXG4gICAgZHYuc2V0VWludDgoMCwgbXNnVHlwZSk7XHJcblxyXG4gICAgZm9yKGxldCBpID0gMDsgaSA8IG1zZy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIGR2LnNldFVpbnQ4KGkrMSwgbXNnLmNoYXJDb2RlQXQoaSkpO1xyXG4gICAgfVxyXG5cclxuICAgIHNvY2tldC5zZW5kKHBheWxvYWQpO1xyXG59Il19

/***/ }),

/***/ "./public/src/ts/startup.ts":
/*!**********************************!*\
  !*** ./public/src/ts/startup.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.prepareStartForm = exports.loginOverlay = void 0;
var helpers_1 = __webpack_require__(/*! ./helpers */ "./public/src/ts/helpers.ts");
var index_1 = __webpack_require__(/*! ./index */ "./public/src/ts/index.ts");
exports.loginOverlay = document.getElementById('login-overlay');
var startButton = document.getElementById('start-game');
var generateNameButton = document.getElementById('generate-name');
var username = document.getElementById('username');
var gameChatContainer = document.getElementById('game-chat');
var gameChatMessage = document.getElementById('message');
var sendMessageButton = document.getElementById('send-message');
var errorDisplayContainer = document.getElementById('error-display');
var errorList = [];
function prepareStartForm() {
    startButton === null || startButton === void 0 ? void 0 : startButton.addEventListener('click', handleStart);
    generateNameButton === null || generateNameButton === void 0 ? void 0 : generateNameButton.addEventListener('click', generateName);
}
exports.prepareStartForm = prepareStartForm;
function generateName() {
    username.value = (0, helpers_1.generatePlayerName)();
    username.classList.remove();
}
function hideStartForm() {
    exports.loginOverlay.classList.add('hidden');
}
function showGameChat() {
    gameChatContainer.classList.remove('hidden');
    sendMessageButton.addEventListener('click', sendMessage);
}
function sendMessage() {
    if (!gameChatMessage.value.trim().length) {
        return;
    }
    (0, index_1.sendChat)(gameChatMessage.value.trim());
    gameChatMessage.value = "";
}
function handleStart() {
    username.classList.remove();
    if (!username.value.trim().length) {
        username.value = (0, helpers_1.generatePlayerName)();
    }
    else if (username.value.trim().length > 20) {
        username.classList.add("error");
        return;
    }
    console.log(username.value);
    (0, index_1.startGame)(username.value);
    hideStartForm();
    showGameChat();
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhcnR1cC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90cy9zdGFydHVwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLHFDQUE2QztBQUM3QyxpQ0FBNEM7QUFFL0IsUUFBQSxZQUFZLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxlQUFlLENBQUUsQ0FBQztBQUN0RSxJQUFNLFdBQVcsR0FBRyxRQUFRLENBQUMsY0FBYyxDQUFDLFlBQVksQ0FBRSxDQUFDO0FBQzNELElBQU0sa0JBQWtCLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxlQUFlLENBQUUsQ0FBQztBQUNyRSxJQUFNLFFBQVEsR0FBRyxRQUFRLENBQUMsY0FBYyxDQUFDLFVBQVUsQ0FBcUIsQ0FBQztBQUV6RSxJQUFNLGlCQUFpQixHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUMsV0FBVyxDQUFFLENBQUM7QUFDaEUsSUFBTSxlQUFlLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxTQUFTLENBQXdCLENBQUM7QUFDbEYsSUFBTSxpQkFBaUIsR0FBRyxRQUFRLENBQUMsY0FBYyxDQUFDLGNBQWMsQ0FBRSxDQUFDO0FBRW5FLElBQU0scUJBQXFCLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxlQUFlLENBQUUsQ0FBQztBQUN4RSxJQUFJLFNBQVMsR0FBRyxFQUFFLENBQUM7QUFFbkIsU0FBZ0IsZ0JBQWdCO0lBQzVCLFdBQVcsYUFBWCxXQUFXLHVCQUFYLFdBQVcsQ0FBRSxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsV0FBVyxDQUFDLENBQUM7SUFDcEQsa0JBQWtCLGFBQWxCLGtCQUFrQix1QkFBbEIsa0JBQWtCLENBQUUsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLFlBQVksQ0FBQyxDQUFDO0FBQ2hFLENBQUM7QUFIRCw0Q0FHQztBQUVELFNBQVMsWUFBWTtJQUNqQixRQUFRLENBQUMsS0FBSyxHQUFHLElBQUEsNEJBQWtCLEdBQUUsQ0FBQztJQUN0QyxRQUFRLENBQUMsU0FBUyxDQUFDLE1BQU0sRUFBRSxDQUFDO0FBQ2hDLENBQUM7QUFFRCxTQUFTLGFBQWE7SUFDbEIsb0JBQVksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQ3pDLENBQUM7QUFDRCxTQUFTLFlBQVk7SUFDakIsaUJBQWlCLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM3QyxpQkFBaUIsQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsV0FBVyxDQUFDLENBQUM7QUFDN0QsQ0FBQztBQUVELFNBQVMsV0FBVztJQUNoQixJQUFJLENBQUMsZUFBZSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQyxNQUFNLEVBQUU7UUFDdEMsT0FBTTtLQUNUO0lBQ0QsSUFBQSxnQkFBUSxFQUFDLGVBQWUsQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQztJQUV2QyxlQUFlLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQztBQUMvQixDQUFDO0FBRUQsU0FBUyxXQUFXO0lBQ2hCLFFBQVEsQ0FBQyxTQUFTLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDNUIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUMsTUFBTSxFQUFFO1FBQy9CLFFBQVEsQ0FBQyxLQUFLLEdBQUcsSUFBQSw0QkFBa0IsR0FBRSxDQUFDO0tBQ3pDO1NBQU0sSUFBSSxRQUFRLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDLE1BQU0sR0FBRyxFQUFFLEVBQUU7UUFDMUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDaEMsT0FBTztLQUNWO0lBQ0QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDNUIsSUFBQSxpQkFBUyxFQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMxQixhQUFhLEVBQUUsQ0FBQztJQUNoQixZQUFZLEVBQUUsQ0FBQztBQUVuQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtnZW5lcmF0ZVBsYXllck5hbWV9IGZyb20gJy4vaGVscGVycyc7XHJcbmltcG9ydCB7c3RhcnRHYW1lLCBzZW5kQ2hhdH0gZnJvbSAnLi9pbmRleCc7XHJcblxyXG5leHBvcnQgY29uc3QgbG9naW5PdmVybGF5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2xvZ2luLW92ZXJsYXknKSE7XHJcbmNvbnN0IHN0YXJ0QnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3N0YXJ0LWdhbWUnKSE7XHJcbmNvbnN0IGdlbmVyYXRlTmFtZUJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdnZW5lcmF0ZS1uYW1lJykhO1xyXG5jb25zdCB1c2VybmFtZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd1c2VybmFtZScpIGFzIEhUTUxJbnB1dEVsZW1lbnQ7XHJcblxyXG5jb25zdCBnYW1lQ2hhdENvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdnYW1lLWNoYXQnKSE7XHJcbmNvbnN0IGdhbWVDaGF0TWVzc2FnZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtZXNzYWdlJykgYXMgSFRNTFRleHRBcmVhRWxlbWVudDtcclxuY29uc3Qgc2VuZE1lc3NhZ2VCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2VuZC1tZXNzYWdlJykhO1xyXG5cclxuY29uc3QgZXJyb3JEaXNwbGF5Q29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Vycm9yLWRpc3BsYXknKSE7XHJcbmxldCBlcnJvckxpc3QgPSBbXTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBwcmVwYXJlU3RhcnRGb3JtKCkge1xyXG4gICAgc3RhcnRCdXR0b24/LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGFuZGxlU3RhcnQpO1xyXG4gICAgZ2VuZXJhdGVOYW1lQnV0dG9uPy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGdlbmVyYXRlTmFtZSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGdlbmVyYXRlTmFtZSgpIHtcclxuICAgIHVzZXJuYW1lLnZhbHVlID0gZ2VuZXJhdGVQbGF5ZXJOYW1lKCk7XHJcbiAgICB1c2VybmFtZS5jbGFzc0xpc3QucmVtb3ZlKCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGhpZGVTdGFydEZvcm0oKSB7XHJcbiAgICBsb2dpbk92ZXJsYXkuY2xhc3NMaXN0LmFkZCgnaGlkZGVuJyk7XHJcbn1cclxuZnVuY3Rpb24gc2hvd0dhbWVDaGF0KCkge1xyXG4gICAgZ2FtZUNoYXRDb250YWluZXIuY2xhc3NMaXN0LnJlbW92ZSgnaGlkZGVuJyk7XHJcbiAgICBzZW5kTWVzc2FnZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHNlbmRNZXNzYWdlKTtcclxufVxyXG5cclxuZnVuY3Rpb24gc2VuZE1lc3NhZ2UoKSB7XHJcbiAgICBpZiAoIWdhbWVDaGF0TWVzc2FnZS52YWx1ZS50cmltKCkubGVuZ3RoKSB7XHJcbiAgICAgICAgcmV0dXJuXHJcbiAgICB9XHJcbiAgICBzZW5kQ2hhdChnYW1lQ2hhdE1lc3NhZ2UudmFsdWUudHJpbSgpKTtcclxuXHJcbiAgICBnYW1lQ2hhdE1lc3NhZ2UudmFsdWUgPSBcIlwiO1xyXG59XHJcblxyXG5mdW5jdGlvbiBoYW5kbGVTdGFydCgpIHtcclxuICAgIHVzZXJuYW1lLmNsYXNzTGlzdC5yZW1vdmUoKTtcclxuICAgIGlmICghdXNlcm5hbWUudmFsdWUudHJpbSgpLmxlbmd0aCkge1xyXG4gICAgICAgIHVzZXJuYW1lLnZhbHVlID0gZ2VuZXJhdGVQbGF5ZXJOYW1lKCk7XHJcbiAgICB9IGVsc2UgaWYgKHVzZXJuYW1lLnZhbHVlLnRyaW0oKS5sZW5ndGggPiAyMCkge1xyXG4gICAgICAgIHVzZXJuYW1lLmNsYXNzTGlzdC5hZGQoXCJlcnJvclwiKTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBjb25zb2xlLmxvZyh1c2VybmFtZS52YWx1ZSk7XHJcbiAgICBzdGFydEdhbWUodXNlcm5hbWUudmFsdWUpO1xyXG4gICAgaGlkZVN0YXJ0Rm9ybSgpO1xyXG4gICAgc2hvd0dhbWVDaGF0KCk7XHJcbiAgICBcclxufSJdfQ==

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
/*!*****************************!*\
  !*** ./public/src/entry.js ***!
  \*****************************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ts_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ts/index */ "./public/src/ts/index.ts");
/* harmony import */ var _scss_main__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scss/main */ "./public/src/scss/main.scss");


})();

/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,