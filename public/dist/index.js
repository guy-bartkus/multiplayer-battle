"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var helpers_1 = require("./helpers");
var websocket_1 = require("./modules/websocket");
var camera = document.querySelector('canvas');
var map_canvas = document.createElement('canvas');
var camera_ctx = camera.getContext('2d');
var map_ctx = camera.getContext('2d');
var siteLoader = document.getElementById('loader');
var loginOverlay = document.getElementById('login-overlay');
var startButton = document.getElementById('start-game');
var generateNameButton = document.getElementById('generate-name');
var username = document.getElementById('username');
var gameChatContainer = document.getElementById('game-chat');
var gameChatMessage = document.getElementById('message');
var sendMessageButton = document.getElementById('send-message');
var errorDisplayContainer = document.getElementById('error-display');
var errorList = [];
var mouse = {
    x: 0,
    y: 0
};
var renderBubbles = true;
function prepareStartForm() {
    startButton === null || startButton === void 0 ? void 0 : startButton.addEventListener('click', handleStart);
    generateNameButton === null || generateNameButton === void 0 ? void 0 : generateNameButton.addEventListener('click', generateName);
}
function generateName() {
    username.value = (0, helpers_1.generatePlayerName)();
    username.classList.remove();
}
function hideStartForm() {
    loginOverlay.classList.add('hidden');
}
function showGameChat() {
    gameChatContainer.classList.remove('hidden');
    sendMessageButton.addEventListener('click', sendMessage);
}
function sendMessage() {
    if (!gameChatMessage.value.trim().length) {
        return;
    }
    var msg = gameChatMessage.value.trim();
    console.log('sending msg', msg);
    gameChatMessage.value = "";
}
function handleStart() {
    username.classList.remove();
    if (!username.value.trim().length) {
        username.value = (0, helpers_1.generatePlayerName)();
    }
    else if (username.value.trim().length > 20) {
        username.classList.add("error");
        return;
    }
    startGame();
    hideStartForm();
    showGameChat();
    renderBubbles = false;
}
var ws = new WebSocket("ws://" + window.location.host);
ws.addEventListener('message', function (e) {
    e.data.arrayBuffer().then(function (arrayBuffer) {
        (0, websocket_1.decode)(arrayBuffer);
    });
});
function startGame() {
    (0, websocket_1.initPlayer)(ws, username.value);
    return true;
}
camera.addEventListener('mousemove', function (e) {
    var rect = camera.getBoundingClientRect();
    mouse.x = e.clientX - rect.left;
    mouse.y = e.clientY - rect.top;
});
window.addEventListener('resize', function () {
    resize();
});
function resize() {
    camera.width = window.innerWidth;
    camera.height = window.innerHeight;
}
var dots = [];
function addDot() {
    dots.push([
        (0, helpers_1.randInt)(0, 1920),
        (0, helpers_1.randInt)(0, 1080),
        (0, helpers_1.randInt)(-2, 3),
        (0, helpers_1.randInt)(-2, 3),
        (0, helpers_1.randInt)(0, 360),
        1 //Current size
    ]);
    if (renderBubbles)
        setTimeout(addDot, (0, helpers_1.randInt)(50, 200));
}
addDot();
function render() {
    camera_ctx.fillStyle = "#444";
    camera_ctx.fillRect(0, 0, camera.width, camera.height);
    if (renderBubbles) {
        for (var i = 0; i < dots.length; i++) {
            var dot = dots[i];
            camera_ctx.fillStyle = "hsl(" + dot[4] + ", 100%, 50%, " + 0.013333 * (50 - dot[5]) + ")";
            camera_ctx.beginPath();
            camera_ctx.arc(dot[0], dot[1], dot[5], 0, Math.PI * 2);
            camera_ctx.closePath();
            camera_ctx.fill();
            dot[0] += dot[2];
            dot[1] += dot[3];
            dot[5] += 0.5;
            if (dot[5] > 50) {
                dots.splice(i, 1);
            }
        }
    }
    else {
        camera_ctx.fillStyle = "#37bd37";
        camera_ctx.beginPath();
        camera_ctx.arc(mouse.x, mouse.y, 5, 0, Math.PI * 2);
        camera_ctx.fill();
        camera_ctx.closePath();
        camera_ctx.save();
        camera_ctx.setTransform(1, 0, 0, 1, camera.width / 2, camera.height / 2);
        camera_ctx.rotate(Math.atan2(mouse.y - camera.height / 2, mouse.x - camera.width / 2));
        camera_ctx.fillRect(-35, -15, 70, 30);
        camera_ctx.restore();
    }
    requestAnimationFrame(render);
}
prepareStartForm();
resize();
render();
setTimeout(function () {
    siteLoader.classList.add('hidden');
}, 500);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxxQ0FBc0Q7QUFDdEQsaURBQXVEO0FBRXZELElBQU0sTUFBTSxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFFLENBQUM7QUFDakQsSUFBTSxVQUFVLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUNwRCxJQUFNLFVBQVUsR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBRSxDQUFDO0FBQzVDLElBQU0sT0FBTyxHQUFHLE1BQU0sQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFFLENBQUM7QUFFekMsSUFBTSxVQUFVLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxRQUFRLENBQUUsQ0FBQztBQUV0RCxJQUFNLFlBQVksR0FBRyxRQUFRLENBQUMsY0FBYyxDQUFDLGVBQWUsQ0FBRSxDQUFDO0FBQy9ELElBQU0sV0FBVyxHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFFLENBQUM7QUFDM0QsSUFBTSxrQkFBa0IsR0FBRyxRQUFRLENBQUMsY0FBYyxDQUFDLGVBQWUsQ0FBRSxDQUFDO0FBQ3JFLElBQU0sUUFBUSxHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUMsVUFBVSxDQUFxQixDQUFDO0FBRXpFLElBQU0saUJBQWlCLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxXQUFXLENBQUUsQ0FBQztBQUNoRSxJQUFNLGVBQWUsR0FBRyxRQUFRLENBQUMsY0FBYyxDQUFDLFNBQVMsQ0FBd0IsQ0FBQztBQUNsRixJQUFNLGlCQUFpQixHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUMsY0FBYyxDQUFFLENBQUM7QUFFbkUsSUFBTSxxQkFBcUIsR0FBRyxRQUFRLENBQUMsY0FBYyxDQUFDLGVBQWUsQ0FBRSxDQUFDO0FBQ3hFLElBQUksU0FBUyxHQUFHLEVBQUUsQ0FBQztBQUdu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QUFDO1FBQ3BELFVBQVUsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNsQixVQUFVLENBQUMsU0FBUyxFQUFFLENBQUM7UUFFdkIsVUFBVSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ2xCLFVBQVUsQ0FBQyxZQUFZLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxLQUFLLEdBQUMsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxNQUFNLEdBQUMsQ0FBQyxDQUFDLENBQUM7UUFDckUsVUFBVSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsTUFBTSxDQUFDLE1BQU0sR0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUMsR0FBRyxNQUFNLENBQUMsS0FBSyxHQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDbkYsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDdEMsVUFBVSxDQUFDLE9BQU8sRUFBRSxDQUFDO0tBQ3hCO0lBRUQscUJBQXFCLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDbEMsQ0FBQztBQUVELGdCQUFnQixFQUFFLENBQUM7QUFDbkIsTUFBTSxFQUFFLENBQUM7QUFDVCxNQUFNLEVBQUUsQ0FBQztBQUNULFVBQVUsQ0FBQztJQUNQLFVBQVUsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQ3ZDLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Z2VuZXJhdGVQbGF5ZXJOYW1lLCByYW5kSW50fSBmcm9tICcuL2hlbHBlcnMnO1xyXG5pbXBvcnQge2luaXRQbGF5ZXIsIGRlY29kZX0gZnJvbSAnLi9tb2R1bGVzL3dlYnNvY2tldCc7XHJcblxyXG5jb25zdCBjYW1lcmEgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdjYW52YXMnKSE7XHJcbmNvbnN0IG1hcF9jYW52YXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdjYW52YXMnKTtcclxuY29uc3QgY2FtZXJhX2N0eCA9IGNhbWVyYS5nZXRDb250ZXh0KCcyZCcpITtcclxuY29uc3QgbWFwX2N0eCA9IGNhbWVyYS5nZXRDb250ZXh0KCcyZCcpITtcclxuXHJcbmNvbnN0IHNpdGVMb2FkZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbG9hZGVyJykhO1xyXG5cclxuY29uc3QgbG9naW5PdmVybGF5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2xvZ2luLW92ZXJsYXknKSE7XHJcbmNvbnN0IHN0YXJ0QnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3N0YXJ0LWdhbWUnKSE7XHJcbmNvbnN0IGdlbmVyYXRlTmFtZUJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdnZW5lcmF0ZS1uYW1lJykhO1xyXG5jb25zdCB1c2VybmFtZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd1c2VybmFtZScpIGFzIEhUTUxJbnB1dEVsZW1lbnQ7XHJcblxyXG5jb25zdCBnYW1lQ2hhdENvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdnYW1lLWNoYXQnKSE7XHJcbmNvbnN0IGdhbWVDaGF0TWVzc2FnZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtZXNzYWdlJykgYXMgSFRNTFRleHRBcmVhRWxlbWVudDtcclxuY29uc3Qgc2VuZE1lc3NhZ2VCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2VuZC1tZXNzYWdlJykhO1xyXG5cclxuY29uc3QgZXJyb3JEaXNwbGF5Q29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Vycm9yLWRpc3BsYXknKSE7XHJcbmxldCBlcnJvckxpc3QgPSBbXTtcclxuXHJcblxyXG5jb25zdCBtb3VzZSA9IHtcclxuICAgIHg6IDAsXHJcbiAgICB5OiAwXHJcbn1cclxuXHJcbmxldCByZW5kZXJCdWJibGVzID0gdHJ1ZTtcclxuXHJcbmZ1bmN0aW9uIHByZXBhcmVTdGFydEZvcm0oKSB7XHJcbiAgICBzdGFydEJ1dHRvbj8uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoYW5kbGVTdGFydCk7XHJcbiAgICBnZW5lcmF0ZU5hbWVCdXR0b24/LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZ2VuZXJhdGVOYW1lKTtcclxufVxyXG5cclxuZnVuY3Rpb24gZ2VuZXJhdGVOYW1lKCkge1xyXG4gICAgdXNlcm5hbWUudmFsdWUgPSBnZW5lcmF0ZVBsYXllck5hbWUoKTtcclxuICAgIHVzZXJuYW1lLmNsYXNzTGlzdC5yZW1vdmUoKTtcclxufVxyXG5cclxuZnVuY3Rpb24gaGlkZVN0YXJ0Rm9ybSgpIHtcclxuICAgIGxvZ2luT3ZlcmxheS5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKTtcclxufVxyXG5mdW5jdGlvbiBzaG93R2FtZUNoYXQoKSB7XHJcbiAgICBnYW1lQ2hhdENvbnRhaW5lci5jbGFzc0xpc3QucmVtb3ZlKCdoaWRkZW4nKTtcclxuICAgIHNlbmRNZXNzYWdlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgc2VuZE1lc3NhZ2UpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBzZW5kTWVzc2FnZSgpIHtcclxuICAgIGlmICghZ2FtZUNoYXRNZXNzYWdlLnZhbHVlLnRyaW0oKS5sZW5ndGgpIHtcclxuICAgICAgICByZXR1cm5cclxuICAgIH1cclxuICAgIGxldCBtc2cgPSBnYW1lQ2hhdE1lc3NhZ2UudmFsdWUudHJpbSgpO1xyXG4gICAgY29uc29sZS5sb2coJ3NlbmRpbmcgbXNnJywgbXNnKTtcclxuXHJcbiAgICBnYW1lQ2hhdE1lc3NhZ2UudmFsdWUgPSBcIlwiO1xyXG59XHJcblxyXG5mdW5jdGlvbiBoYW5kbGVTdGFydCgpIHtcclxuICAgIHVzZXJuYW1lLmNsYXNzTGlzdC5yZW1vdmUoKTtcclxuICAgIGlmICghdXNlcm5hbWUudmFsdWUudHJpbSgpLmxlbmd0aCkge1xyXG4gICAgICAgIHVzZXJuYW1lLnZhbHVlID0gZ2VuZXJhdGVQbGF5ZXJOYW1lKCk7XHJcbiAgICB9IGVsc2UgaWYgKHVzZXJuYW1lLnZhbHVlLnRyaW0oKS5sZW5ndGggPiAyMCkge1xyXG4gICAgICAgIHVzZXJuYW1lLmNsYXNzTGlzdC5hZGQoXCJlcnJvclwiKTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBzdGFydEdhbWUoKVxyXG4gICAgaGlkZVN0YXJ0Rm9ybSgpO1xyXG4gICAgc2hvd0dhbWVDaGF0KCk7XHJcbiAgICByZW5kZXJCdWJibGVzID0gZmFsc2U7XHJcbn1cclxuXHJcbmNvbnN0IHdzID0gbmV3IFdlYlNvY2tldChgd3M6Ly8ke3dpbmRvdy5sb2NhdGlvbi5ob3N0fWApO1xyXG5cclxud3MuYWRkRXZlbnRMaXN0ZW5lcignbWVzc2FnZScsIGUgPT4ge1xyXG4gICAgKGUuZGF0YSBhcyBCbG9iKS5hcnJheUJ1ZmZlcigpLnRoZW4oYXJyYXlCdWZmZXIgPT4ge1xyXG4gICAgICAgIGRlY29kZShhcnJheUJ1ZmZlcik7XHJcbiAgICB9KTtcclxufSk7XHJcblxyXG5mdW5jdGlvbiBzdGFydEdhbWUoKSB7XHJcbiAgICBpbml0UGxheWVyKHdzLCB1c2VybmFtZS52YWx1ZSk7XHJcbiAgICBcclxuICAgIHJldHVybiB0cnVlXHJcbn1cclxuXHJcbmNhbWVyYS5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBlID0+IHtcclxuICAgIGNvbnN0IHJlY3QgPSBjYW1lcmEuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcblxyXG4gICAgbW91c2UueCA9IGUuY2xpZW50WCAtIHJlY3QubGVmdFxyXG4gICAgbW91c2UueSA9IGUuY2xpZW50WSAtIHJlY3QudG9wO1xyXG59KTtcclxuXHJcbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCAoKSA9PiB7XHJcbiAgICByZXNpemUoKTtcclxufSk7XHJcblxyXG5mdW5jdGlvbiByZXNpemUoKSB7XHJcbiAgICBjYW1lcmEud2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aDtcclxuICAgIGNhbWVyYS5oZWlnaHQgPSB3aW5kb3cuaW5uZXJIZWlnaHQ7XHJcbn1cclxuXHJcbmNvbnN0IGRvdHM6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyLCBudW1iZXIsIG51bWJlciwgbnVtYmVyXVtdID0gW107XHJcblxyXG5mdW5jdGlvbiBhZGREb3QoKSB7XHJcbiAgICBkb3RzLnB1c2goW1xyXG4gICAgICAgIHJhbmRJbnQoMCwgMTkyMCksIC8veFxyXG4gICAgICAgIHJhbmRJbnQoMCwgMTA4MCksIC8veVxyXG4gICAgICAgIHJhbmRJbnQoLTIsIDMpLFxyXG4gICAgICAgIHJhbmRJbnQoLTIsIDMpLFxyXG4gICAgICAgIHJhbmRJbnQoMCwgMzYwKSwgLy9IU0wgaHVlXHJcbiAgICAgICAgMSAvL0N1cnJlbnQgc2l6ZVxyXG4gICAgXSk7XHJcblxyXG4gICAgaWYocmVuZGVyQnViYmxlcykgc2V0VGltZW91dChhZGREb3QsIHJhbmRJbnQoNTAsIDIwMCkpO1xyXG59XHJcblxyXG5hZGREb3QoKTtcclxuXHJcbmZ1bmN0aW9uIHJlbmRlcigpIHtcclxuICAgIGNhbWVyYV9jdHguZmlsbFN0eWxlID0gXCIjNDQ0XCI7XHJcblxyXG4gICAgY2FtZXJhX2N0eC5maWxsUmVjdCgwLCAwLCBjYW1lcmEud2lkdGgsIGNhbWVyYS5oZWlnaHQpO1xyXG5cclxuICAgIGlmKHJlbmRlckJ1YmJsZXMpIHtcclxuICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgZG90cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBjb25zdCBkb3QgPSBkb3RzW2ldO1xyXG4gICAgXHJcbiAgICAgICAgICAgIGNhbWVyYV9jdHguZmlsbFN0eWxlID0gYGhzbCgke2RvdFs0XX0sIDEwMCUsIDUwJSwgJHswLjAxMzMzMyAqICg1MCAtIGRvdFs1XSl9KWA7XHJcbiAgICBcclxuICAgICAgICAgICAgY2FtZXJhX2N0eC5iZWdpblBhdGgoKTtcclxuICAgICAgICAgICAgY2FtZXJhX2N0eC5hcmMoZG90WzBdLCBkb3RbMV0sIGRvdFs1XSwgMCwgTWF0aC5QSSAqIDIpO1xyXG4gICAgICAgICAgICBjYW1lcmFfY3R4LmNsb3NlUGF0aCgpO1xyXG4gICAgICAgICAgICBjYW1lcmFfY3R4LmZpbGwoKTtcclxuICAgIFxyXG4gICAgICAgICAgICBkb3RbMF0gKz0gZG90WzJdO1xyXG4gICAgICAgICAgICBkb3RbMV0gKz0gZG90WzNdO1xyXG4gICAgICAgICAgICBkb3RbNV0gKz0gMC41O1xyXG4gICAgXHJcbiAgICAgICAgICAgIGlmKGRvdFs1XSA+IDUwKSB7XHJcbiAgICAgICAgICAgICAgICBkb3RzLnNwbGljZShpLCAxKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgY2FtZXJhX2N0eC5maWxsU3R5bGUgPSBcIiMzN2JkMzdcIjtcclxuXHJcbiAgICAgICAgY2FtZXJhX2N0eC5iZWdpblBhdGgoKTtcclxuICAgICAgICBjYW1lcmFfY3R4LmFyYyhtb3VzZS54LCBtb3VzZS55LCA1LCAwLCBNYXRoLlBJICogMik7XHJcbiAgICAgICAgY2FtZXJhX2N0eC5maWxsKCk7XHJcbiAgICAgICAgY2FtZXJhX2N0eC5jbG9zZVBhdGgoKTtcclxuXHJcbiAgICAgICAgY2FtZXJhX2N0eC5zYXZlKCk7XHJcbiAgICAgICAgY2FtZXJhX2N0eC5zZXRUcmFuc2Zvcm0oMSwgMCwgMCwgMSwgY2FtZXJhLndpZHRoLzIsIGNhbWVyYS5oZWlnaHQvMik7XHJcbiAgICAgICAgY2FtZXJhX2N0eC5yb3RhdGUoTWF0aC5hdGFuMihtb3VzZS55IC0gY2FtZXJhLmhlaWdodC8yLCBtb3VzZS54IC0gY2FtZXJhLndpZHRoLzIpKTtcclxuICAgICAgICBjYW1lcmFfY3R4LmZpbGxSZWN0KC0zNSwgLTE1LCA3MCwgMzApO1xyXG4gICAgICAgIGNhbWVyYV9jdHgucmVzdG9yZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShyZW5kZXIpO1xyXG59XHJcblxyXG5wcmVwYXJlU3RhcnRGb3JtKCk7XHJcbnJlc2l6ZSgpO1xyXG5yZW5kZXIoKTtcclxuc2V0VGltZW91dChmdW5jdGlvbigpe1xyXG4gICAgc2l0ZUxvYWRlci5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKTtcclxufSwgNTAwKTtcclxuIl19